services:
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      # Required API keys
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - LANGEXTRACT_API_KEY=${LANGEXTRACT_API_KEY:-}
      # Optional configuration
      - DEBUG=${DEBUG:-true}
      - HOST=0.0.0.0
      - PORT=8000
    volumes:
      - ./uploads:/app/uploads
      # Mount .env file if it exists
      - ./.env:/app/.env:ro
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - BACKEND_URL=http://api:8000
      - DOCUMENT_API_URL=http://api:8000
    volumes:
      - ./web:/app
      - /app/node_modules
      - /app/.next
    restart: unless-stopped
    depends_on:
      - api
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: Ollama for local LLM models
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    profiles:
      - ollama  # Only start when explicitly requested
    # Uncomment below for GPU support
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  # Optional: Redis for caching (future enhancement)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - cache  # Only start when explicitly requested
    command: redis-server --appendonly yes

networks:
  app-network:
    driver: bridge

volumes:
  ollama_data:
  redis_data: